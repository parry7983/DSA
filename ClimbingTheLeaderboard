  static int[] climbingLeaderboard(int[] scores, int[] alice) {

        int size=alice.length;
        int l=scores.length;
        int[] output= new int[size];
        Map<Integer,Integer>map= new HashMap<Integer,Integer>();
        int ranking=0;
        for (int i=0;i<scores.length;i++){
            if(map.get(scores[i])==null){
                ranking=ranking+1;
                map.put(scores[i],ranking);
            }

        }
        for (int k=0;k<alice.length;k++){
for (int j=0;j<scores.length;j++){
 if(alice[k]>=scores[0]){
   output[k]=1;
   break;  
 }
 else if(alice[k]<scores[l-1]){
    // ranking=ranking+1;
     output[k]=map.get(scores[l-1])+1; 
     break;
 }

 else if(alice[k]>=scores[j]){
   output[k]=map.get(scores[j]);
   break;
 }

 /*else if(alice[k]>scores[j]){
   output[k]=map.get(scores[j]);
 }*/

}

        }


return output;

    }
